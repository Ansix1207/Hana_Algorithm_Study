#1. 스택

stack = []
n = int(sys.stdin.readline())

for _ in range(n):
    input_value = sys.stdin.readline().split()
    if input_value[0] == 'push':
        stack.append(input_value[1])
    elif input_value[0] == 'pop':
        print(stack.pop() if stack else -1)
    elif input_value[0] == 'size':
        print(len(stack))
    elif input_value[0] == 'empty':
        print(0 if stack else 1)
    elif input_value[0] == 'top':
        print(stack[-1] if stack else -1)
    else:
        pass




#2. 단어 뒤집기
import sys
n = int( input())

for _ in range(n):
  sentence = input()
  sentence = sentence.split(' ')
  s1 = []
  for s in sentence:
    s1.append(s[::-1])
  print(*s1)



#3. 괄호

# vps의 조건
# 1. '('으로 시작되어야한다.
# 2. '('와 ')'의 개수가 같아야한다
# 3. ')'가 더많아지는 순간이 있으면 안된다.

number = int(input())
for _ in range(number):

    n = list(input())
    # ['(', '(', ')', ')', '(', ')', ')']
    #1.
    result = 'YES'
    if n[0] != '(':
        result = 'NO'
    #2.
    if n.count('(') != n.count(')'):
        result = 'NO'
    #3.
    galho_count = 0
    for galho in n:
        if galho == '(':
            galho_count += 1
        else:
            galho_count -= 1
        if galho_count < 0:
            result = 'NO'
    print(result)



#4. 스택 수열

import sys
n = int(sys.stdin.readline())

temp = True
stack = []
answer = []
count = 1

for i in range(n):
    num = int(input())
    while count <= num: # 입력된 수열보다 작은 경우 같아질 때까지 반복
        stack.append(count)
        answer.append('+')
        count += 1
    if stack[-1] == num: # 입력된 수열과 동일한 경우
        stack.pop()
        answer.append('-')
    else: # 특정 수열을 만들 수 없을 경우
        temp = False

if not temp:
    print('NO')
else:
    for i in answer:
        print(i)



#5. 에디터






#6. 큐(queue)
queue = []
n = int(input('정수를 입력하시오'))
for _ in range(n):
    Q = input().split()
    if len(Q) > 1:
        queue.append(Q[1])
    else:
        if Q[0] == 'pop':
            print(queue.pop() if queue else -1)
        elif Q[0] == 'size':
            print(len(queue))
        elif Q[0] == 'empty':
            print(0 if queue else 1)
        elif Q[0] == 'front':
            print(queue[0] if queue else -1)
        elif Q[0] == 'back':
            print(queue[-1] if queue else -1)
        else:
            pass





#7. 조세퍼스 문제 (해답 보고 이해)
from collections import deque

n, k = map(int, input().split())

ysps = []  # 뽑은 수 넣을 요세푸스리스트
queue = deque()

for i in range(1, n + 1):
    queue.append(i)

while queue:
    for i in range(k - 1):
        queue.append(queue.popleft())
    ysps.append(queue.popleft())  

print(ysps)



#8. 덱
import sys
n0 = int(sys.stdin.readline().strip())
deque = []

for _ in range(n0):
    n1 = sys.stdin.readline().strip().split(' ')
    print(n1)
    if len(n1) > 1:
        if n1[0] == 'push_front':
            deque.insert(0, n1[1])
        elif n1[0] == 'push_back':
            deque.append(n1[1])
    if len(n1) == 1:
        if n1[0] == 'pop_front':
            if deque == []:
                print(-1)
            else:
                print(deque.pop(0))
        elif n1[0] == 'pop_back':
            if deque == []:
                print(-1)
            else:
                print(deque.pop())
        elif n1[0] == 'size':
            print(len(deque))
        elif n1[0] == 'empty':
            if deque == []:
                print(1)
            else:
                print(0)
        elif n1[0] == 'front':
            if deque == []:
                print(-1)
            else:
                print(deque[0])
        elif n1[0] == 'back':
            if deque == []:
                print(-1)
            else:
                print(deque[-1])
        else:
            pass
